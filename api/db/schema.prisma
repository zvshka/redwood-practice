datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  title     String
  message   String?
  createdAt DateTime @default(now())
}

model User {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  hashedPassword      String // <─┐
  salt                String // <─┼─ add these lines
  resetToken          String? // <─┤
  resetTokenExpiresAt DateTime? // <─┘
}

model Seminar {
  id          Int      @id @default(autoincrement())
  title       String
  date        DateTime
  responsible String
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  date        DateTime
  responsible String
  place       String
}

model Position {
  id       Int       @id @default(autoincrement())
  title    String
  entrants Entrant[]
}

enum Education {
  MIDDLE
  HIGH
}

model Entrant {
  id              Int       @id @default(autoincrement())
  firstName       String
  lastName        String
  middleName      String
  course          Course    @relation(fields: [courseId], references: [id])
  region          Region    @relation(fields: [regionId], references: [id])
  organization    String
  position        Position  @relation(fields: [positionId], references: [id])
  education       Education
  diplomaLastname String
  diplomaSerial   String
  diplomaNumber   String
  snils           String
  birthday        DateTime
  citizenship     String

  createdAt    DateTime      @default(now())
  courseId     Int
  regionId     Int
  positionId   Int
}

model Curator {
  id      Int      @id @default(autoincrement())
  fio     String
  courses Course[]
}

model Region {
  id       Int       @id @default(autoincrement())
  name     String
  entrants Entrant[]
}

model Course {
  id        Int      @id @default(autoincrement())
  title     String
  category  String
  hours     Int
  finalWork String
  beginsAt  DateTime
  endsAt    DateTime
  periods   String

  curator   Curator   @relation(fields: [curatorId], references: [id])
  createdAt DateTime  @default(now())
  curatorId Int
  entrants  Entrant[]
}
